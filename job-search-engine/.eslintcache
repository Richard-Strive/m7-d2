[{"/Users/dorian/Documents/GitHub/m7-d2/job-search-engine/src/index.js":"1","/Users/dorian/Documents/GitHub/m7-d2/job-search-engine/src/App.js":"2","/Users/dorian/Documents/GitHub/m7-d2/job-search-engine/src/reportWebVitals.js":"3","/Users/dorian/Documents/GitHub/m7-d2/job-search-engine/src/components/Home.jsx":"4","/Users/dorian/Documents/GitHub/m7-d2/job-search-engine/src/components/JobList.jsx":"5","/Users/dorian/Documents/GitHub/m7-d2/job-search-engine/src/components/ClickedJob.jsx":"6","/Users/dorian/Documents/GitHub/m7-d2/job-search-engine/src/components/FavoriteJobs.jsx":"7"},{"size":500,"mtime":1612272277512,"results":"8","hashOfConfig":"9"},{"size":475,"mtime":1612359251531,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1612272277514,"results":"11","hashOfConfig":"9"},{"size":3705,"mtime":1612307606230,"results":"12","hashOfConfig":"9"},{"size":837,"mtime":1612358102487,"results":"13","hashOfConfig":"9"},{"size":726,"mtime":1612360649970,"results":"14","hashOfConfig":"9"},{"size":1468,"mtime":1612360358262,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1oasuwb",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/dorian/Documents/GitHub/m7-d2/job-search-engine/src/index.js",[],["33","34"],"/Users/dorian/Documents/GitHub/m7-d2/job-search-engine/src/App.js",["35"],"/Users/dorian/Documents/GitHub/m7-d2/job-search-engine/src/reportWebVitals.js",[],"/Users/dorian/Documents/GitHub/m7-d2/job-search-engine/src/components/Home.jsx",["36","37","38","39"],"import React, { Component } from \"react\";\nimport ClickedJob from \"./ClickedJob\";\n\nimport JobList from \"./JobList\";\n\nimport {\n  Button,\n  Navbar,\n  Nav,\n  NavDropdown,\n  Form,\n  FormControl,\n  Container,\n  Col,\n  Spinner,\n} from \"react-bootstrap\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Home.css\";\n\n//cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json?description=frontend&location=berlin\n//https://jobs.github.com/positions.json?description={POSITION}&location={LOCATION}\n\nexport default class Home extends Component {\n  state = {\n    title: \"\",\n    location: \"\",\n    jobList: [],\n    loader: true,\n    selectedJob: null,\n  };\n\n  getResults = async (location, title) => {\n    try {\n      const response = await fetch(\n        `https://cors--anywhere.herokuapp.com/https://jobs.github.com/positions.json?description=${title}&location=${location}`\n      );\n      const data = await response.json();\n      if (response.ok) {\n        this.setState({\n          ...this.state,\n          jobList: data,\n          loader: false,\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  handleSelectedJob = (id) => {\n    this.setState({\n      ...this.state,\n      selectedJob: this.state.jobList.find((job) => job.id === id),\n    });\n  };\n\n  handleTitle = (e) => {\n    this.setState({\n      ...this.state,\n      title: e.target.value,\n    });\n  };\n\n  handleLocation = (e) => {\n    this.setState({\n      ...this.state,\n      location: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.getResults(this.state.title, this.state.location);\n  };\n  // getResults(this.state.location, this.state.position);\n\n  render() {\n    return (\n      <>\n        <Navbar bg=\"dark\" expand=\"lg\" className=\"home_nav_items\">\n          <div>\n            <Navbar.Brand href=\"#home\">\n              <GitHubIcon className=\"text-white mb-1\" />{\" \"}\n              <span className=\"text-white\">Jobs</span>\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          </div>\n          <div>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Form inline onSubmit={this.handleSubmit}>\n                <FormControl\n                  type=\"text\"\n                  placeholder=\"Choose the title\"\n                  value={this.state.title}\n                  className=\"mr-sm-2\"\n                  onChange={this.handleTitle}\n                />\n                <FormControl\n                  type=\"text\"\n                  placeholder=\"Choose the location\"\n                  value={this.state.location}\n                  className=\"mr-sm-2\"\n                  onChange={this.handleLocation}\n                />\n                <Button type=\"Submit\" variant=\"success\">\n                  Search\n                </Button>\n              </Form>\n            </Navbar.Collapse>\n          </div>\n        </Navbar>\n\n        <Container className=\"the_container\">\n          <div>\n            {this.state.jobList.length < 1 ? (\n              <h1 className=\"text-center mt-5 text-white fake-loader\">\n                Select a title or a location{\" \"}\n              </h1>\n            ) : (\n              this.state.jobList.map((job, index) => (\n                <JobList\n                  {...job}\n                  key={index}\n                  selectedJob={this.handleSelectedJob}\n                />\n              ))\n            )}\n          </div>\n          <div className=\"mt-3 \">\n            {this.state.selectedJob && (\n              <ClickedJob singleJob={this.state.selectedJob} />\n            )}\n          </div>\n        </Container>\n      </>\n    );\n  }\n}\n","/Users/dorian/Documents/GitHub/m7-d2/job-search-engine/src/components/JobList.jsx",["40","41","42"],"import { Row, Card, Container, Spinner } from \"react-bootstrap\";\nimport \"./JobList.css\";\n\nfunction JobList({\n  company,\n  company_logo,\n  description,\n  title,\n  location,\n  id,\n  selectedJob,\n}) {\n  console.log(id);\n  return (\n    <div className=\"job_info_container\" onClick={() => selectedJob(id)}>\n      <div className=\"text-center\">RESULTS FOR {location}</div>\n      <Row>\n        <div className=\"job_header\">\n          <img className=\"company_logo\" src={company_logo} alt=\" \" />\n          <span className=\"ml-2\">\n            <b>{company}</b>\n          </span>\n        </div>\n      </Row>\n      <div className=\"job_infos\">\n        <b className=\"ml-3\">{title}</b>\n        <p className=\"ml-3\">\n          <div dangerouslySetInnerHTML={{ __html: description }}></div>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default JobList;\n","/Users/dorian/Documents/GitHub/m7-d2/job-search-engine/src/components/ClickedJob.jsx",[],"/Users/dorian/Documents/GitHub/m7-d2/job-search-engine/src/components/FavoriteJobs.jsx",["43","44","45","46","47","48","49","50","51","52"],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":3,"column":42,"nodeType":"59","messageId":"60","endLine":3,"endColumn":46},{"ruleId":"57","severity":1,"message":"61","line":9,"column":3,"nodeType":"59","messageId":"60","endLine":9,"endColumn":6},{"ruleId":"57","severity":1,"message":"62","line":10,"column":3,"nodeType":"59","messageId":"60","endLine":10,"endColumn":14},{"ruleId":"57","severity":1,"message":"63","line":14,"column":3,"nodeType":"59","messageId":"60","endLine":14,"endColumn":6},{"ruleId":"57","severity":1,"message":"64","line":15,"column":3,"nodeType":"59","messageId":"60","endLine":15,"endColumn":10},{"ruleId":"57","severity":1,"message":"65","line":1,"column":15,"nodeType":"59","messageId":"60","endLine":1,"endColumn":19},{"ruleId":"57","severity":1,"message":"66","line":1,"column":21,"nodeType":"59","messageId":"60","endLine":1,"endColumn":30},{"ruleId":"57","severity":1,"message":"64","line":1,"column":32,"nodeType":"59","messageId":"60","endLine":1,"endColumn":39},{"ruleId":"57","severity":1,"message":"67","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},{"ruleId":"57","severity":1,"message":"68","line":4,"column":3,"nodeType":"59","messageId":"60","endLine":4,"endColumn":9},{"ruleId":"57","severity":1,"message":"61","line":6,"column":3,"nodeType":"59","messageId":"60","endLine":6,"endColumn":6},{"ruleId":"57","severity":1,"message":"62","line":7,"column":3,"nodeType":"59","messageId":"60","endLine":7,"endColumn":14},{"ruleId":"57","severity":1,"message":"69","line":8,"column":3,"nodeType":"59","messageId":"60","endLine":8,"endColumn":7},{"ruleId":"57","severity":1,"message":"70","line":9,"column":3,"nodeType":"59","messageId":"60","endLine":9,"endColumn":14},{"ruleId":"57","severity":1,"message":"63","line":10,"column":3,"nodeType":"59","messageId":"60","endLine":10,"endColumn":6},{"ruleId":"57","severity":1,"message":"64","line":11,"column":3,"nodeType":"59","messageId":"60","endLine":11,"endColumn":10},{"ruleId":"57","severity":1,"message":"65","line":13,"column":3,"nodeType":"59","messageId":"60","endLine":13,"endColumn":7},{"ruleId":"57","severity":1,"message":"66","line":14,"column":3,"nodeType":"59","messageId":"60","endLine":14,"endColumn":12},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'NavDropdown' is defined but never used.","'Col' is defined but never used.","'Spinner' is defined but never used.","'Card' is defined but never used.","'Container' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","no-global-assign","no-unsafe-negation"]